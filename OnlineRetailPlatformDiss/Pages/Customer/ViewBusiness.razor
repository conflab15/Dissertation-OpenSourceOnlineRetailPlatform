@using OnlineRetailPlatformDiss.Models;
@inject OnlineRetailPlatformDiss.Data.ApplicationDbContext _context;
@using Microsoft.Extensions.Logging
@inject AuthenticationStateProvider auth;

<!-- This does not need to be authorised at this is publically visible to potential customers. -->
<!-- This needs to be removed in the future to act as a component than an individual page -->
@page "/customer/business/view"

<!-- Page Header -->
<div class="container">
    <div class="row pt-3">
        <div class="col text-center align-items-center">
            <h1 class="display-4 fw-bold">Businesses</h1>
        </div>
    </div>
</div>

<div class="divider" />

<!-- Search Box to search by town/location... -->
<div class="container justify-content-center p-2">
    <div class="row">
        <div class="col-md-12">
            <div class="input-group mb-3"> <input type="text" class="form-control input-text" name="SearchString" @bind-value="SearchText" placeholder="Search by town....">
                <div class="input-group-append"> <input type="submit" class="btn btn-outline-warning btn-lg" value="Submit" @onclick="ShowBusinesses" /> </div>
            </div>
            <h2>@message</h2>
        </div>
    </div>
</div>

<!-- List Businesses... -->
<div class="container">
    @if (businesses == null)
    {
        <div class="alert alert-warning d-flex align-items-center" role="alert">
          <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
          <div>
            Hmmm, we couldn't find any businesses to show you...
          </div>
        </div>
    }
    else
    {
        @foreach (var business in businesses)
        {
        <div class="row p-2">
            <BusinessDetailsComponent business="@business" />
            <div class="divider" />
        </div>
        }
    }

    
</div>

@code {
    List<BusinessAccountModel>? businesses;
    public string? message { get; set; }
    public string? SearchText { get; set; }

    protected override void OnInitialized()
    {
        businesses = _context.BusinessAccount?.ToList();
    }

    private void ShowBusinesses()
    {
        //Resetting the list, which ensures search results are not restricted to the results of the previous search
        businesses = _context.BusinessAccount?.ToList();
        //Filter the list to show results which are 
        businesses = _context.BusinessAccount?.Where(b => b.Town.ToLower().Contains(SearchText.ToLower())).ToList();
        message = "Showing Businesses within: '" + SearchText + "'";
    }
}