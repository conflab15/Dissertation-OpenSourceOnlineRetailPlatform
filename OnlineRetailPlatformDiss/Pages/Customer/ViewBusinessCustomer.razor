@using OnlineRetailPlatformDiss.Models;
@inject OnlineRetailPlatformDiss.Data.ApplicationDbContext _context;
@using Microsoft.Extensions.Logging
@inject AuthenticationStateProvider auth;

<!-- No Auth needed as this information is publically visible to a potential Customer -->
<!-- This needs to be removed in the future to act as a component than an individual page -->
@page "/customer/business/{businessName}"

<!-- Business Details -->
<div class="container">
    <div class="px-4 pt-3 my-5 mt-2 text-center">
        <div class="overflow-hidden" style="max-height: 30vh;">
            <div class="container px-5">
            @if(Business.BannerUrl == null)
            {
                <img src="/images/business/placeholderimg.jpg" class="img-fluid border rounded-3 shadow-lg mb-4 pb-2" alt="Placeholder Image" width="700" height="500" loading="lazy">
            }
            else
            {
                <img src="@Business.BannerUrl" class="img-fluid border rounded-3 shadow-lg mb-4 pb-2" alt="Business Image" width="700" height="500" loading="lazy">
            }
            </div>
        </div>


        <div class="row">
            <div class="col"> <!-- Google Maps of the Business -->
                <p>*map goes here*</p>
            </div>
            <div class="col"> <!-- Business Details -->
                <h1 class="display-4 fw-bold">@Business.BusinessName</h1>
                <div class="col-lg-6 mx-auto">
                  <p class="lead mb-4">@Business.BusinessDesc</p>
                    <div class="d-grid gap-2 d-sm-flex justify-content-sm-center mb-5">
                        <a class="btn btn-outline-secondary btn-lg px-4 disabled">Button</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

<!-- List of Products sold by the business -->

    @if(!Products.Any())
    {
    <div class="alert alert-warning d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
        <div>
        <p>We couldn't find any products! Please try again later!</p>
        </div>
    </div>
    }
    else
    {
    <div class="row pt-5 mt-3 pl-3">
        @foreach (var product in Products)
        {
        <div class="col-lg-4 d-flex align-items-center">
            <ProductCard product="product" />
        </div>
        }
    </div>
}
</div>

@code {
    [Parameter]
    public string? businessName {  get;  set; }
    public BusinessAccountModel? Business { get; set; }
    public List<ProductModel>? Products { get; set; } 

    protected override void OnInitialized()
    {
        Business = _context.BusinessAccount.Single(b => b.BusinessName == businessName);
        Products = _context.Products.Where(prod => prod.BusinessName == businessName).ToList();
    }
}
