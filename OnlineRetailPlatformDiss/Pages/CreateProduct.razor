@using OnlineRetailPlatformDiss.Models;
@inject OnlineRetailPlatformDiss.Data.ApplicationDbContext _context;
@using Microsoft.Extensions.Logging
@inject ILogger<CreateProduct> Logger
@inject AuthenticationStateProvider auth;

@attribute [Authorize]

@page "/product/create"

<div class="container">
    <div class="row">
        <div class="col">
            <h1>Create a new Product:</h1>
        </div>
    </div>
    <EditForm Model="@product" OnValidSubmit="@SubmitNewProduct">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="productName" class="form-label">Product Name</label>
            <InputText class="form-control" id="productName" @bind-Value="product.ProductName" placeholder="My Product" />
        </div>
        <div class="mb-3">
            <label for="productDesc" class="form-label">Product Description</label>
            <InputText class="form-control" id="productDesc" @bind-Value="product.ProductDescription" placeholder="My Product does this and that!" />
        </div>
        <div class="mb-3">
            <label for="productPrice" class="form-label">Product Price</label>
            <InputNumber class="form-control" id="productPrice" @bind-Value="product.ProductPrice" placeholder="5.99" />
        </div>
        <div class="mb-3">
            <label for="productPromo" class="form-label">Promotional Price</label>
            <InputNumber class="form-control" id="productPromo" @bind-Value="product.PromotionalPrice" placeholder="2.99" />
        </div>
        <div class="mb-3">
            <label for="productStock" class="form-label">Stock Level</label>
            <InputNumber class="form-control" id="productStock" @bind-Value="product.StockLevel" placeholder="20" />
        </div>


        

        <!-- Hidden Field binding this.... 

        <InputText type="hidden" id="businessManager" @bind-Value="businessAccount.ManagerID" placeholder="@manager"/>

        -->

       <div class="mb-3">
            <button class="btn btn-primary" type="submit">Submit</button>
       </div>

    </EditForm>
</div>

@code {
    private ProductModel product = new();
    private string user;

    protected override void OnInitialized()
    {
        user = auth.GetAuthenticationStateAsync().Result.User.Identity.Name;
        //businessAccount.ManagerID = manager;
        //Date Created field must be auto assigned here with a hidden field.
    }

    private async void SubmitNewProduct()
    {
        try
        {
            _context.Products.Add(product);
            await _context.SaveChangesAsync();
        }  
        catch
        {
            base.StateHasChanged();

        }
        product = new ProductModel();
        base.StateHasChanged();
    }
}